@model FarmacyMedic.Models.DTO.OrderCreationDto

<h2>Crear Nueva Orden</h2>

<form id="orderForm" method="post" action="@Url.Action("Create", "Order")">
    <div class="form-group">
        <label for="DateCreation">Fecha de Creación:</label>
        @Html.TextBoxFor(m => m.DateCreation, new { type = "date", @class = "form-control" })
    </div>
    <div class="form-group">
        <label for="ClientId">Cliente:</label>
        @Html.DropDownListFor(m => m.ClientId, (IEnumerable<SelectListItem>)ViewBag.Clients, new { @class = "form-control" })
    </div>

    @*<div class="form-group">
        <label for="ProductName">Buscar Producto:</label>
        <input type="text" id="productName" class="form-control" onkeyup="buscarProducto()" />
    </div>

    <div class="row">
        <div class="col-md-6">
            <h3>Productos Disponibles</h3>
            <ul id="availableProducts" class="list-group">
            </ul>
        </div>
        <div class="col-md-6">
            <h3>Productos Seleccionados</h3>
            <ul id="selectedProducts" class="list-group">
            </ul>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <h3>Cantidades</h3>
            <ul id="productQuantities" class="list-group">
            </ul>
        </div>
    </div>*@
@*
    <input type="hidden" id="productDetail" name="ProductDetail" value="" />*@


    <button type="submit" id="crearOrdenButton" class="btn btn-primary mt-3" >Add Products</button>

</form>








@*@model FarmacyMedic.Models.DTO.OrderCreationDto

<h2>Create Order</h2>

@using (Html.BeginForm("Create", "Order", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.ProductsId, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.ProductsId, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ProductsId, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ClientId, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.ClientId, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DateCreation, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.DateCreation, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.DateCreation, "", new { @class = "text-danger" })
    </div>

    

    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
}

@if (Model != null)
{
    <h4>Created Order:</h4>
    <div>
        <h5>Order ID: @Model.ProductsId</h5>
       
    </div>
}






*@


















@*@model FarmacyMedic.Models.DTO.OrderCreationDto

<h1>Create New Order</h1>

<h2>Nueva Orden</h2>
<form method="post" asp-action="Create">
    <div class="form-group">
        <label for="DateCreation">Fecha de Creación:</label>
        <input type="date" class="form-control" id="DateCreation" name="DateCreation" asp-for="DateCreation" required>
    </div>
    <div class="form-group">
        <label for="ClientId">ID del Cliente:</label>
        <input type="number" class="form-control" id="ClientId" name="ClientId" asp-for="ClientId" required>
    </div>
    <button type="submit" value="Create" class="btn btn-primary">Crear Orden</button>
</form>
<p>
    @Html.ActionLink("Back to List", "Index")
</p>
*@